#!/bin/sh -x

. `dirname $0`/xtools.sh

#
# Find the LLVM tools whose versions match those expected by Loom:
#
#  - in an explicit LLVM_PREFIX environment variable
#  - relative to the `opt` tool in the current PATH
#
if [ "${LLVM_PREFIX}" = "" ]
then
	llvm_link=`which llvm-link`
	if [ -e "${llvm_link}" ]
	then
		LLVM_PREFIX=`dirname ${llvm_link} | xargs dirname`
	else
		echo "LLVM_PREFIX not set and no llvm-link in PATH"
		exit 1
	fi
fi


check_tool ${LLVM_PREFIX} CC clang
check_tool ${LLVM_PREFIX} CXX clang++
check_tool ${LLVM_PREFIX} LLC llc
check_tool ${LLVM_PREFIX} LLVM_LINK llvm-link
check_tool ${LLVM_PREFIX} OPT opt


#
# Find the Loom library:
#
#  - as explicitly specified with LOOM_LIB
#  - within LLVM_PREFIX
#

libname=LLVMLoom.so

if [ "${LOOM_LIB}" = "" ]
then
	LOOM_LIB="${LLVM_PREFIX}/lib/${libname}"

	if ! [ -e "${LOOM_LIB}" ]
	then
		echo "LOOM_LIB not specified, no ${libname} in LLVM_PREFIX"
		exit 1
	fi
fi

export LOOM_FILE="loom.policy"

export LLVM_INSTR_DEPS="${LOOM_FILE}"
export LLVM_INSTR_FLAGS="-load ${LOOM_LIB} -loom -loom-file ${LOOM_FILE} \
	${LLVM_INSTR_FLAGS}"
export LLVM_INSTR_LDADD="-lxo"

# If building on FreeBSD 10, /usr/bin/ld doesn't support the
# --no-fatal-warnings option, so we need to suppress its use.
if [ `uname -U` -lt 1100000 ]
then
	export LD_NO_FATAL_WARNS=
fi

# Default to the LOOM kernel config, but allow this to be overridden.
: ${KERNCONF:="LOOM"}
export KERNCONF

# Use instrumentation in the kernel config phase.
export CONFIGARGS="-i"

# Set up an instrumentation policy for the kernel.
KERNEL_OBJDIR="`make -V .OBJDIR`/sys/${KERNCONF}"
mkdir -p ${KERNEL_OBJDIR}

if [ -e "${KERNEL_INSTR_POLICY}" ]
then
	cp ${KERNEL_INSTR_POLICY} ${KERNEL_OBJDIR}/loom.policy
else
	echo "No KERNEL_INSTR_POLICY specified, defaulting to" \
		"no kernel instrumentation"

        echo << EOF >> ${KERNEL_OBJDIR}/${LOOM_FILE}
# Auto-generated kernel instrumentation configuration

strategy: inline
logging: none
EOF

fi

# Disable -Werror in both buildworld (NO_WERROR) and buildkernel (WERROR).
# This is currently necessary due to warnings generated by development
# versions of Clang (v3.9).
export NO_WERROR=
export WERROR=

make $*
